@use "sass:math";

@function strip-unit($num) {
	@return math.div($num, $num * 0 + 1);
}

$MaxWidthWindow: 1920px;
$MinWidthWindow: 320px;

@mixin flex($justify-content: flex-start, $align-item: center, $flex-direction: row) {
	display: flex;
	flex-direction: $flex-direction;
	align-items: $align-item;
	justify-content: $justify-content;
}

@function adaptiveSize($NumMax, $NumMin, $WidthMax: $MaxWidthWindow, $WidthMin: $MinWidthWindow) {
	$WidthMax: strip-unit($WidthMax);
	$WidthMin: strip-unit($WidthMin);

	$k: math.div(($NumMax - $NumMin), ($WidthMax - $WidthMin));
	$b: ($NumMin - ($k * $WidthMin)) * 1px;

	@return calc(#{$k} * 100vw + #{$b});
}

@mixin adapt-font-size($Fmax, $Fmin, $Vmin: $MinWidthWindow, $Vmax: $MaxWidthWindow) {
	@media (min-width: $Vmax) {
		font-size: $Fmax * 1px;
	}

	@media (min-width: $Vmin) and (max-width: $Vmax) {
		font-size: adaptiveSize($Fmax, $Fmin, $Vmax, $Vmin);
	}
}

@mixin indent($rule, $Direction, $NumMax, $NumMin, $Vmax: $MaxWidthWindow, $Vmin: $MinWidthWindow) {
	@media (min-width: $Vmax) {
		#{$rule}-#{$Direction}: $NumMax * 1px;
	}

	@media (min-width: $Vmin) and (max-width: $Vmax) {
		#{$rule}-#{$Direction}: adaptiveSize($NumMax, $NumMin, $Vmax, $Vmin);
	}
}

@mixin indent-2($rule, $NumMax1, $NumMin1, $NumMax2, $NumMin2, $Vmax: $MaxWidthWindow, $Vmin: $MinWidthWindow) {
	@media (min-width: $Vmax) {
		#{$rule}-top: $NumMax1 * 1px;
		#{$rule}-bottom: $NumMax1 * 1px;

		#{$rule}-left: $NumMax2 * 1px;
		#{$rule}-right: $NumMax2 * 1px;
	}

	@media (min-width: $Vmin) and (max-width: $Vmax) {
		$horizontalResult: adaptiveSize($NumMax1, $NumMin1, $Vmax, $Vmin);
		#{$rule}-top: $horizontalResult;
		#{$rule}-bottom: $horizontalResult;

		$verticalResult: adaptiveSize($NumMax2, $NumMin2, $Vmax, $Vmin);
		#{$rule}-left: $verticalResult;
		#{$rule}-right: $verticalResult;
	}
}

@mixin grid($colsdfumnCount, $gap: 0) {
	display: grid;
	grid-gap: $gap * 1px;
	grid-template-columns: repeat($columnCount, minmax(0, auto));
}
